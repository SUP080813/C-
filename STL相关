STL:标准模板库（容器、算法、迭代器）
顺序容器+关联式容器
一、顺序容器：
1.vector
  内存空间可增长的动态数组，连续的线性空间，底层实现是数组；
  扩容原理：
  vector就是一个动态增长的数组，里面有一个指针指向一片连续的空间，当空间装不下的时候，会申请一片更大的空间，将原来的数据拷贝过去，并释放原来的旧空间。
  增删时间复杂度为O(n);
  支持+，+=，<等操作符。
  维护三个迭代器：start, finish, end_of_storage
  
2.deque双端队列
  双向开口的存储空间分段连续的数据结构，每段数据空间内部是连续的，底层实现是一个中控器和多个数据缓冲区
  deque与vector区别：
  1）对首尾进行插入和删除O(1)
  2）deque没有容量概念，随时可以增加一段新的空间并连接
  有四部分数据空间，在程序运行时在堆上动态分布
  中控器(map)维护一组指针，指向每一段数据空间(缓冲区)的起始地址。
  迭代器(cur,first,last,node)-(实际访问位置，访问元素区间，访问元素入口地址)
  map扩容原理：
  先填满缓冲区，填满后配置更大的，拷贝原来的，释放原空间。
  
3.list
  内存空间不连续，底层实现是deque双向链表，只能通过指针访问数据
  数据的随机存取O(n)，但是增删高效
  不支持+，+=，<等操作符。
 
 4.stack
  list和deque实现，不用vector是因为扩容耗时
  
5.queue
  list和deque实现
  
6.priority_queue
  底层实现时vector，heap为处理规则管理底层容器实现
  
7.set/multiset
  底层实现是红黑树，有序不可重复，multi可重复；
  
8.map/multimap
  底层实现是红黑树，有序不可重复，multi可重复；
  
9.unordered_set/unordered_multiset
  底层实现是哈希表，无序不可重复，multi可重复；
  
10.unordered_map/unordered_multimap
  底层实现是哈希表，无序不可重复，multi可重复；
